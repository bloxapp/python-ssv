# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ssv.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import attestation_pb2 as attestation__pb2
import beacon_block_pb2 as beacon__block__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ssv.proto',
  package='ethereum.eth.v1alpha1',
  syntax='proto3',
  serialized_options=b'\n\031org.ethereum.eth.v1alpha1B\010SSVProtoP\001Z6github.com/prysmaticlabs/ethereumapis/eth/v1alpha1;eth\252\002\025Ethereum.Eth.v1alpha1\312\002\025Ethereum\\Eth\\v1alpha1',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\tssv.proto\x12\x15\x65thereum.eth.v1alpha1\x1a\x11\x61ttestation.proto\x1a\x12\x62\x65\x61\x63on_block.proto\x1a\x1cgoogle/api/annotations.proto\"Y\n\rStreamRequest\x12\x13\n\x0bpublic_keys\x18\x01 \x03(\x0c\x12\x33\n\x06topics\x18\x02 \x03(\x0e\x32#.ethereum.eth.v1alpha1.StreamTopics\"\xcd\x01\n\x07SSVTask\x12\x12\n\npublic_key\x18\x01 \x01(\x0c\x12\x32\n\x05topic\x18\x02 \x01(\x0e\x32#.ethereum.eth.v1alpha1.StreamTopics\x12=\n\x0b\x61ttestation\x18\x03 \x01(\x0b\x32&.ethereum.eth.v1alpha1.AttestationDataH\x00\x12\x33\n\x05\x62lock\x18\x04 \x01(\x0b\x32\".ethereum.eth.v1alpha1.BeaconBlockH\x00\x42\x06\n\x04\x64\x61ta*r\n\x0cStreamTopics\x12\x0e\n\nSIGN_BLOCK\x10\x00\x12\x0f\n\x0b\x43HECK_BLOCK\x10\x01\x12\x14\n\x10SIGN_ATTESTATION\x10\x02\x12\x15\n\x11\x43HECK_ATTESTATION\x10\x03\x12\x14\n\x10SIGN_AGGREGATION\x10\x04\x32\x80\x01\n\x03SSV\x12y\n\rGetTaskStream\x12$.ethereum.eth.v1alpha1.StreamRequest\x1a\x1e.ethereum.eth.v1alpha1.SSVTask\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/eth/v1alpha1/ssv/stream0\x01\x42\x8f\x01\n\x19org.ethereum.eth.v1alpha1B\x08SSVProtoP\x01Z6github.com/prysmaticlabs/ethereumapis/eth/v1alpha1;eth\xaa\x02\x15\x45thereum.Eth.v1alpha1\xca\x02\x15\x45thereum\\Eth\\v1alpha1b\x06proto3'
  ,
  dependencies=[attestation__pb2.DESCRIPTOR,beacon__block__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,])

_STREAMTOPICS = _descriptor.EnumDescriptor(
  name='StreamTopics',
  full_name='ethereum.eth.v1alpha1.StreamTopics',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SIGN_BLOCK', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CHECK_BLOCK', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SIGN_ATTESTATION', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CHECK_ATTESTATION', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SIGN_AGGREGATION', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=404,
  serialized_end=518,
)
_sym_db.RegisterEnumDescriptor(_STREAMTOPICS)

StreamTopics = enum_type_wrapper.EnumTypeWrapper(_STREAMTOPICS)
SIGN_BLOCK = 0
CHECK_BLOCK = 1
SIGN_ATTESTATION = 2
CHECK_ATTESTATION = 3
SIGN_AGGREGATION = 4



_STREAMREQUEST = _descriptor.Descriptor(
  name='StreamRequest',
  full_name='ethereum.eth.v1alpha1.StreamRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='public_keys', full_name='ethereum.eth.v1alpha1.StreamRequest.public_keys', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='topics', full_name='ethereum.eth.v1alpha1.StreamRequest.topics', index=1,
      number=2, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=105,
  serialized_end=194,
)


_SSVTASK = _descriptor.Descriptor(
  name='SSVTask',
  full_name='ethereum.eth.v1alpha1.SSVTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='public_key', full_name='ethereum.eth.v1alpha1.SSVTask.public_key', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='topic', full_name='ethereum.eth.v1alpha1.SSVTask.topic', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='attestation', full_name='ethereum.eth.v1alpha1.SSVTask.attestation', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='block', full_name='ethereum.eth.v1alpha1.SSVTask.block', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='data', full_name='ethereum.eth.v1alpha1.SSVTask.data',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=197,
  serialized_end=402,
)

_STREAMREQUEST.fields_by_name['topics'].enum_type = _STREAMTOPICS
_SSVTASK.fields_by_name['topic'].enum_type = _STREAMTOPICS
_SSVTASK.fields_by_name['attestation'].message_type = attestation__pb2._ATTESTATIONDATA
_SSVTASK.fields_by_name['block'].message_type = beacon__block__pb2._BEACONBLOCK
_SSVTASK.oneofs_by_name['data'].fields.append(
  _SSVTASK.fields_by_name['attestation'])
_SSVTASK.fields_by_name['attestation'].containing_oneof = _SSVTASK.oneofs_by_name['data']
_SSVTASK.oneofs_by_name['data'].fields.append(
  _SSVTASK.fields_by_name['block'])
_SSVTASK.fields_by_name['block'].containing_oneof = _SSVTASK.oneofs_by_name['data']
DESCRIPTOR.message_types_by_name['StreamRequest'] = _STREAMREQUEST
DESCRIPTOR.message_types_by_name['SSVTask'] = _SSVTASK
DESCRIPTOR.enum_types_by_name['StreamTopics'] = _STREAMTOPICS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

StreamRequest = _reflection.GeneratedProtocolMessageType('StreamRequest', (_message.Message,), {
  'DESCRIPTOR' : _STREAMREQUEST,
  '__module__' : 'ssv_pb2'
  # @@protoc_insertion_point(class_scope:ethereum.eth.v1alpha1.StreamRequest)
  })
_sym_db.RegisterMessage(StreamRequest)

SSVTask = _reflection.GeneratedProtocolMessageType('SSVTask', (_message.Message,), {
  'DESCRIPTOR' : _SSVTASK,
  '__module__' : 'ssv_pb2'
  # @@protoc_insertion_point(class_scope:ethereum.eth.v1alpha1.SSVTask)
  })
_sym_db.RegisterMessage(SSVTask)


DESCRIPTOR._options = None

_SSV = _descriptor.ServiceDescriptor(
  name='SSV',
  full_name='ethereum.eth.v1alpha1.SSV',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=521,
  serialized_end=649,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetTaskStream',
    full_name='ethereum.eth.v1alpha1.SSV.GetTaskStream',
    index=0,
    containing_service=None,
    input_type=_STREAMREQUEST,
    output_type=_SSVTASK,
    serialized_options=b'\202\323\344\223\002\032\022\030/eth/v1alpha1/ssv/stream',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_SSV)

DESCRIPTOR.services_by_name['SSV'] = _SSV

# @@protoc_insertion_point(module_scope)
